# =============================================================================
# Nginx Proxy Manager with Advanced Features - Environment Configuration
# =============================================================================
# Copy this file to .env and update the values as needed
# DO NOT commit .env file to version control for security

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Timezone for all containers (use your local timezone)
# Examples: America/New_York, Europe/London, Asia/Tokyo, Australia/Sydney
TIMEZONE=UTC

# =============================================================================
# DATABASE CONFIGURATION (MariaDB)
# =============================================================================
# IMPORTANT: Change these default passwords for production use!

# Root password for MariaDB (used for admin access)
NPM_DB_ROOT_PASSWORD=changeme_root_password_here
MYSQL_ROOT_PASSWORD=changeme_root_password_here

# Database name for Nginx Proxy Manager
NPM_DB_NAME=npm

# Database user for Nginx Proxy Manager
NPM_DB_USER=npm_user

# Database password for NPM user
NPM_DB_PASSWORD=changeme_npm_password_here

# =============================================================================
# FAIL2BAN CONFIGURATION
# =============================================================================

# Log level for Fail2Ban (DEBUG, INFO, WARNING, ERROR)
F2B_LOG_LEVEL=INFO

# How long to keep ban records in database
F2B_DB_PURGE_AGE=7d

# IPTables chain to use (DOCKER-USER recommended for Docker environments)
F2B_IPTABLES_CHAIN=DOCKER-USER

# =============================================================================
# ADVANCED FEATURES
# =============================================================================
# These features are automatically configured in docker-compose.yml

# Real IP module for proper client IP detection behind proxies
ENABLE_REAL_IP_MODULE=true

# Custom Nginx configurations support
ENABLE_CUSTOM_NGINX_CONFIGS=true

# Advanced security headers and protections
ENABLE_ADVANCED_SECURITY=true

# =============================================================================
# OPTIONAL FEATURES - ENABLE/DISABLE AS NEEDED
# =============================================================================

# Enable Telegram notifications for security alerts (true/false)
# Set to false to disable Telegram notifications completely
ENABLE_TELEGRAM_NOTIFICATIONS=true

# Enable Prometheus metrics collection (true/false)
# Prometheus runs independently and collects security metrics
# Can be used by multiple Grafana instances or external monitoring tools
ENABLE_PROMETHEUS=true

# Enable main Grafana dashboard (true/false)  
# Grafana connects to Prometheus for visualization (requires ENABLE_PROMETHEUS=true)
ENABLE_GRAFANA=true

# Enable multiple Grafana instances for different teams/purposes (true/false)
# Requires ENABLE_PROMETHEUS=true, works alongside ENABLE_GRAFANA
ENABLE_MULTI_GRAFANA=false

# =============================================================================
# TELEGRAM NOTIFICATIONS CONFIGURATION
# =============================================================================
# Only required if ENABLE_TELEGRAM_NOTIFICATIONS=true
# To get these values:
# 1. Create a bot: Message @BotFather on Telegram, use /newbot
# 2. Get chat ID: Message @userinfobot or your bot, then get chat ID

# Telegram Bot Token (from @BotFather)
TELEGRAM_BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz

# Telegram Chat ID (your chat ID or group chat ID)
TELEGRAM_CHAT_ID=-1001234567890

# =============================================================================
# PROMETHEUS CONFIGURATION  
# =============================================================================
# Only required if ENABLE_PROMETHEUS=true

# Prometheus port (default: 9090) - metrics collection
PROMETHEUS_PORT=9090

# =============================================================================
# GRAFANA CONFIGURATION  
# =============================================================================
# Only required if ENABLE_GRAFANA=true (also requires ENABLE_PROMETHEUS=true)

# Grafana admin password (change this!)
GRAFANA_ADMIN_PASSWORD=changeme_grafana_password

# Grafana web interface port (default: 3000)
GRAFANA_PORT=3000

# =============================================================================
# MULTI-GRAFANA CONFIGURATION
# =============================================================================
# Only required if ENABLE_MULTI_GRAFANA=true
# Each instance connects to the same Prometheus for different use cases

# Security team Grafana (port 3001) - Focus on security alerts and threats
GRAFANA_SECURITY_PASSWORD=changeme_security_password

# Executive dashboard Grafana (port 3002) - High-level business metrics  
GRAFANA_EXEC_PASSWORD=changeme_executive_password

# =============================================================================
# EXTERNAL GRAFANA INTEGRATION
# =============================================================================
# If you want to connect external Grafana instances to this Prometheus:
# 
# 1. External Grafana Datasource Configuration:
#    - Type: Prometheus
#    - URL: http://YOUR_SERVER_IP:9090 
#    - Access: Server (default)
#
# 2. Available metrics for external dashboards:
#    - f2b_banned_total (banned IPs)
#    - nginx_http_requests_total (HTTP requests)
#    - nginx_connections_active (active connections)
#    - node_cpu_seconds_total (CPU usage)
#    - node_memory_MemAvailable_bytes (memory usage)
#
# 3. Import existing dashboards:
#    Copy JSON from: ./monitoring/grafana/dashboards/

# =============================================================================
# OPTIONAL: ADDITIONAL SETTINGS
# =============================================================================

# Custom domain for Let's Encrypt certificates (if using wildcard certs)
# ACME_EMAIL=your-email@example.com

# Custom network subnet (default: 172.20.0.0/16)
# DOCKER_NETWORK_SUBNET=172.20.0.0/16

# Enable debug mode for troubleshooting (true/false)
# DEBUG_MODE=false