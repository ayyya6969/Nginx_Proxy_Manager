# Fail2Ban action configuration for Cloudflare APIv4
#
# This action adds/removes IPs to Cloudflare's firewall rules via API

[Definition]

# Option:  actionstart
# Notes.:  command executed once at the start of Fail2Ban
# Values:  CMD
actionstart =

# Option:  actionstop
# Notes.:  command executed once at the end of Fail2Ban
# Values:  CMD
actionstop =

# Option:  actioncheck
# Notes.:  command executed once before each actionban command
# Values:  CMD
actioncheck =

# Option:  actionban
# Notes.:  command executed when banning an IP. Take care that the command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
actionban = curl -s -X POST "https://api.cloudflare.com/client/v4/user/firewall/access_rules/rules" \
            -H "Authorization: Bearer <cftoken>" \
            -H "Content-Type: application/json" \
            --data '{"mode":"block","configuration":{"target":"ip","value":"<ip>"},"notes":"Fail2Ban <name> at $(date -u +%%Y-%%m-%%dT%%H:%%M:%%SZ)"}'

# Option:  actionunban
# Notes.:  command executed when unbanning an IP. Take care that the command is executed with Fail2Ban user rights.
# Tags:    <ip>  IP address
actionunban = curl -s -X GET "https://api.cloudflare.com/client/v4/user/firewall/access_rules/rules?mode=block&configuration_target=ip&configuration_value=<ip>&page=1&per_page=1" \
              -H "Authorization: Bearer <cftoken>" \
              -H "Content-Type: application/json" | { \
              read response; \
              rule_id=$(echo "$response" | grep -Po '"id":"\K[^"]*' | head -1); \
              if [ ! -z "$rule_id" ]; then \
                curl -s -X DELETE "https://api.cloudflare.com/client/v4/user/firewall/access_rules/rules/$rule_id" \
                -H "Authorization: Bearer <cftoken>" \
                -H "Content-Type: application/json"; \
              fi; \
              }

[Init]

# Cloudflare API token
cftoken = <cftoken>
